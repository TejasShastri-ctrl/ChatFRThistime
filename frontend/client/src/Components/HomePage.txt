// shortcuts like rafc not working

// 45:48 if errors
// left at 1,07

import React, { useEffect, useState } from "react";
import { TbCircleDashed } from "react-icons/tb"
import { BiCommentDetail } from "react-icons/bi"
import { AiOutlineSearch } from "react-icons/ai"
import { BsEmojiSmile, BsFilter, BsMicFill, BsThreeDotsVertical } from "react-icons/bs"
import { ImAttachment } from "react-icons/im"
import { useNavigate } from 'react-router-dom';

import { useSelector } from 'react-redux';

import { Button, Menu, MenuItem } from '@mui/material';

import ChatCard from "./ChatCard/ChatCard";
import MessageCard from "./MessageCard/MessageCard";
import "./HomePage.css"
import { Profile } from "./Profile";
import CreateGroup from "./Group/CreateGroup";
import { currentUser, logoutAction, searchUser } from "./Redux/Auth/Action";
import { createChat } from "./Redux/Chat/Action";
import { useDispatch} from 'react-redux'

const HomePage = () => {
    const [querys, setQuerys] = useState(null);
    const [currentChat, setCurrentChat] = useState(null);
    const [content, setContent] = useState("");
    const [isProfile, setIsProfile] = useState(false);
    const navigate = useNavigate();
    const [isG, setisG]=useState(false);
    const [anchorEl, setAnchorEl] = useState(null);
    const open = Boolean(anchorEl);
    const token = localStorage.getItem("token");

    // This is object destructuring. It's extracting the auth property from the entire Redux store.
    // store => store: This selector function takes the entire Redux store as an argument and simply returns the whole store object.
    const {auth} = useSelector(store=>store)

    const dispatch= useDispatch();

    // const handleClickOnChatCard = (item, userId) => {
    //     // setCurrentChat(item);
    //     console.log(userId, "------", item);
    //     dispatch(createChat({token, data:{userId}}));
    // }

    const handleClickOnChatCard = (userId) => {
        //setCurrentChat(item);
        // console.log(userId);
        dispatch(createChat({token, data:{userId}}));
    }

    const handleSearch = (keyword) => {
        dispatch(searchUser({keyword, token}))
     };

    const handleCreateNewMessage = () => {
        console.log('new message created');
    }

    const handleCreateChat=(userId)=>{
        //LWDA
    }

    const handleNavigate = () => {
        // Navigate profile
        setIsProfile(true);
    }

    const handleCloseOpenProfile = () => {
        setIsProfile(false);
    }

    const handleClick = (e) => {
        setAnchorEl(e.currentTarget);
    };
    const handleClose = () => {
        setAnchorEl(null);
    };

    const handleCreateGroup=()=>{
        setisG(true);
    }

    useEffect(()=>{
        dispatch(currentUser(token))
    },[token])

    const handleLogout=()=>{
        dispatch(logoutAction())
        navigate("/signup")
    }

    useEffect(() => {
        if(!auth.reqUser) {
            navigate("/signup")
        }
    },[auth.reqUser])

    return (
        <div className="relative bg-slate-500">
            <div className="w-full py-14 bg-[#00a884]"></div>
            <div className="flex bg-[#f0f2f5] h-[90vh] absolute left-[2vw] top-[5vh] w-[96vw]">
                <div className="left w-[30%] bg-[#e8e9ec] h-full">
                    {/* Profile */}
                    {isG && <CreateGroup/>}
                    {isProfile && <div className="w-full h-full"> <Profile handleCloseOpenProfile={handleCloseOpenProfile} /> </div>}
                    {!isProfile && !isG && <div className="w-full">

                        {/* Home */}
                        {!isProfile && <div className="flex justify-between items-center p-3">
                            <div onClick={handleNavigate} className="flex items-center space-x-3">
                                <img className="rounded-full w-10 h-10 cursor-pointer" src="https://cdn.pixabay.com/photo/2023/09/13/07/25/fence-8250307_1280.jpg" alt="" />
                                <p>username</p>
                            </div>
                            <div className="space-x-3 text-wxl flex">
                                <TbCircleDashed className="cursor-pointer" onClick={() => navigate("/status")} />
                                <BiCommentDetail />
                                <div>

                                    <BsThreeDotsVertical id="basic-button"
                                        aria-controls={open ? 'basic-menu' : undefined}
                                        aria-haspopup="true"
                                        aria-expanded={open ? 'true' : undefined}
                                        onClick={handleClick} />

                                    <Menu
                                        id="basic-menu"
                                        anchorEl={anchorEl}
                                        open={open}
                                        onClose={handleClose}
                                        MenuListProps={{
                                            'aria-labelledby': 'basic-button',
                                        }}
                                    >
                                        <MenuItem onClick={handleClose}>Profile</MenuItem>
                                        <MenuItem onClick={handleCreateGroup}>Create New Group</MenuItem>
                                        <MenuItem onClick={handleLogout}>Logout</MenuItem>
                                    </Menu>
                                </div>
                            </div>
                        </div>}

                        <div className="relative flex justify-center items-center bg-white py-4 px-3">
                            <input
                                className="border-none outline-none bg-slate-200 rounded-md w-[93%] pl-9 py-2"
                                type="text"
                                placeholder="search or start new chat"
                                onChange={(e) => {
                                    setQuerys(e.target.value)
                                    handleSearch(e.target.value)
                                }}
                                value={querys}
                            />

                            <AiOutlineSearch size={24} className="left-5 top-6 absolute" />
                            <div>
                                <BsFilter className="ml-4 text-3xl" />
                            </div>
                        </div>
                        {/* all users */}

                        <div className="bg-white overflow-y-scroll h-[72vh] px-3">
                            {querys &&
                            auth.searchUser?.map((item) => {
                                <div onClick={()=>handleClickOnChatCard(item.id)}>{""}<hr /> <ChatCard item={item} />{" "}</div>})}
                        </div>
                            
                    </div>}
                </div>

                {/* <div className="right"> */}
                {/* default page */}
                {!currentChat && <div className="w-[70%] flex flex-col items-center justify-center">
                    <div className="max w-[70%] text-center">
                        <img src="https://img.freepik.com/premium-vector/chat-logo-design_93835-108.jpg?w=740"
                            alt="" />
                        <h1 className="text-4xl text-gray-600">Chat application</h1>
                        <p className="my-9">Click on a chat to continue or create a new one</p>
                    </div>
                </div>}

                {/* Message Part */}
                {currentChat && <div className="w-[70%] relative bg-blue-200">
                    <div className="header absolute top-0 w-full bg-[#f0f2f5]">
                        <div className="flex justify-between">
                            <div className="py-3 space-x-4 flex items-center px-3">
                                <img className="w-10 h-10 rounded-full" src="https://cdn.pixabay.com/photo/2014/07/24/05/25/pedestrians-400811_960_720.jpg" alt="" />
                                <p>ChosenUsername</p>
                            </div>
                            <div className="py-3 flex space-x-4 items-center px-3">
                                <AiOutlineSearch />
                                <BsThreeDotsVertical />

                            </div>
                        </div>
                    </div>
                    {/* Message section */}
                    <div className="px-10 h-[85vh] overflow-y-scroll">
                        <div className="space-y-1 flex flex-col justify-center mt-20 py-2">
                            {[1, 1, 1, 1, 1].map((item, i) => <MessageCard isReqUserMessage={i % 2 == 0} content={"some message"} />)}
                        </div>
                    </div>
                    {/* footer */}
                    <div className="footer bg-[#f0f2f5] absolute bottom-0 w-full py-3 text-2xl">
                        <div className="flex justify-between items-center px-5 relative">
                            <div className="flex space-x-2">
                                <BsEmojiSmile className="cursor-pointer" />
                                <ImAttachment />
                            </div>
                            <input className="py-2 outline-none border-none bg-white pl-4 rounded-md w-[85%]"
                                type="text" onChange={(e) => setContent(e.target.value)}
                                placeholder="Type message"
                                value={content}
                                onKeyPress={(e) => {
                                    if (e.key == "Enter") {
                                        handleCreateNewMessage();
                                        setContent("")
                                    }
                                }}
                            />
                            <BsMicFill />

                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    );
};

export default HomePage